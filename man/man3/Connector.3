.TH "Connector< Type >" 3 "Mon Nov 16 2020" "Version 01" "Shared library Connection Socket" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Connector< Type >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sock_connect\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename T > \fBConnector\fP (T sun_path)"
.br
.RI "Creates new UNIX-Socket Explicit ctor: "
.ti -1c
.RI "template<typename T , typename U > \fBConnector\fP (T addr, U port)"
.br
.RI "Creates new Stream-Socket with IP:PORT If constructor creates set status true\&. "
.ti -1c
.RI "\fB~Connector\fP ()=default"
.br
.ti -1c
.RI "int \fBAccept\fP (std::string *client_address=nullptr)"
.br
.RI "Accepting new connection Accept client connection and returns client id If parameter passed write ip address of connected client to it\&. "
.ti -1c
.RI "bool \fBListen\fP () const"
.br
.RI "Listening address Listen functions\&. "
.ti -1c
.RI "bool \fBBind\fP (bool listen=true) const"
.br
.RI "Binding address Bind function\&. "
.ti -1c
.RI "bool \fBConnect\fP ()"
.br
.RI "Connecting to server Connect If connection lost or failed set state to false If connection success set state to true\&. "
.ti -1c
.RI "void \fBShutdown\fP (int \fBid\fP=0)"
.br
.RI "Shutdown socket Close opened socket\&. "
.ti -1c
.RI "template<typename T > std::size_t \fBSend\fP (const T *value, std::size_t size)"
.br
.ti -1c
.RI "template<typename T > std::size_t \fBReceive\fP (T *value, std::size_t size)"
.br
.ti -1c
.RI "int \fBid\fP ()"
.br
.RI "Return socket id\&. "
.ti -1c
.RI "bool \fBStatus\fP () const"
.br
.ti -1c
.RI "void \fBassign_thread\fP (int \fBid\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class Type>
.br
class Connector< Type >"

.PP
Definition at line 27 of file sock_connect\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class Type > template<typename T > \fBConnector\fP< Type >::\fBConnector\fP (T sun_path)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Creates new UNIX-Socket Explicit ctor: 
.PP
\fBParameters\fP
.RS 4
\fIsun_path\fP 
.RE
.PP

.PP
Definition at line 39 of file sock_connect\&.h\&.
.SS "template<class Type > template<typename T , typename U > \fBConnector\fP< Type >::\fBConnector\fP (T addr, U port)\fC [inline]\fP"

.PP
Creates new Stream-Socket with IP:PORT If constructor creates set status true\&. 
.PP
\fBParameters\fP
.RS 4
\fIaddr\fP IP Address 
.br
\fIport\fP Port 
.RE
.PP

.PP
Definition at line 48 of file sock_connect\&.h\&.
.SS "template<class Type > \fBConnector\fP< Type >::~\fBConnector\fP ()\fC [default]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class Type > int \fBConnector\fP< Type >::Accept (std::string * client_address = \fCnullptr\fP)\fC [inline]\fP"

.PP
Accepting new connection Accept client connection and returns client id If parameter passed write ip address of connected client to it\&. 
.PP
\fBParameters\fP
.RS 4
\fIclient_address\fP 
.RE
.PP
\fBReturns\fP
.RS 4
client_id 
.RE
.PP

.PP
Definition at line 59 of file sock_connect\&.h\&.
.SS "template<class Type > void \fBConnector\fP< Type >::assign_thread (int id)\fC [inline]\fP"
Used with multithreading sockets interactions 
.PP
\fBParameters\fP
.RS 4
\fIid\fP Client ID that has been assigned as descriptor 
.RE
.PP

.PP
Definition at line 131 of file sock_connect\&.h\&.
.SS "template<class Type > bool \fBConnector\fP< Type >::Bind (bool listen = \fCtrue\fP) const\fC [inline]\fP"

.PP
Binding address Bind function\&. 
.PP
\fBReturns\fP
.RS 4
Status of execution 
.RE
.PP

.PP
Definition at line 73 of file sock_connect\&.h\&.
.SS "template<class Type > bool \fBConnector\fP< Type >::Connect ()\fC [inline]\fP"

.PP
Connecting to server Connect If connection lost or failed set state to false If connection success set state to true\&. 
.PP
\fBReturns\fP
.RS 4
state 
.RE
.PP

.PP
Definition at line 82 of file sock_connect\&.h\&.
.SS "template<class Type > int \fBConnector\fP< Type >::id ()\fC [inline]\fP"

.PP
Return socket id\&. 
.PP
\fBReturns\fP
.RS 4
socket\&.id 
.RE
.PP

.PP
Definition at line 120 of file sock_connect\&.h\&.
.SS "template<class Type > bool \fBConnector\fP< Type >::Listen () const\fC [inline]\fP"

.PP
Listening address Listen functions\&. 
.PP
\fBReturns\fP
.RS 4
Status of execution 
.RE
.PP

.PP
Definition at line 66 of file sock_connect\&.h\&.
.SS "template<class Type > template<typename T > std::size_t \fBConnector\fP< Type >::Receive (T * value, std::size_t size)\fC [inline]\fP"
Receive template function 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP type of value 
.RE
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP pointer to value 
.br
\fIsize\fP size of bytes 
.RE
.PP
\fBReturns\fP
.RS 4
count of received bytes 
.RE
.PP

.PP
Definition at line 112 of file sock_connect\&.h\&.
.SS "template<class Type > template<typename T > std::size_t \fBConnector\fP< Type >::Send (const T * value, std::size_t size)\fC [inline]\fP"
Send template function 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP type of value 
.RE
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP pointer to value 
.br
\fIsize\fP size of bytes 
.RE
.PP
\fBReturns\fP
.RS 4
count of sent bytes 
.RE
.PP

.PP
Definition at line 100 of file sock_connect\&.h\&.
.SS "template<class Type > void \fBConnector\fP< Type >::Shutdown (int id = \fC0\fP)\fC [inline]\fP"

.PP
Shutdown socket Close opened socket\&. 
.PP
\fBParameters\fP
.RS 4
\fIid\fP Disconnected descriptor id 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 90 of file sock_connect\&.h\&.
.SS "template<class Type > bool \fBConnector\fP< Type >::Status () const\fC [inline]\fP"
Socket or connection status 
.PP
Definition at line 125 of file sock_connect\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Shared library Connection Socket from the source code\&.
